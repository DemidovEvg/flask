"""empty message

Revision ID: df9668ba2a42
Revises: bddc4eacdd48
Create Date: 2023-01-03 19:10:03.280912

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session
from project.models import User

# revision identifiers, used by Alembic.
revision = 'df9668ba2a42'
down_revision = 'bddc4eacdd48'
branch_labels = None
depends_on = None


def fill_future_not_null_field():
    class OldUser(User):
        name = sa.Column(sa.String(50), unique=True)

    connection = op.get_bind()
    session = Session(bind=connection)
    session.execute(sa.update(OldUser).values(
        firstname=OldUser.name,
        lastname=OldUser.name,
        username=OldUser.name
    ))
    session.commit()


def upgrade():
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('firstname',
                      sa.String(length=120),
                      server_default='',
                      nullable=True)
        )
        batch_op.add_column(
            sa.Column('lastname',
                      sa.String(length=120),
                      server_default='',
                      nullable=True)
        )
        batch_op.add_column(
            sa.Column('username',
                      sa.String(length=50),
                      server_default='',
                      nullable=True)
        )
    fill_future_not_null_field()
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('firstname',
                              existing_type=sa.String(length=120),
                              nullable=False)
        batch_op.alter_column('lastname',
                              existing_type=sa.String(length=120),
                              nullable=False)
        batch_op.alter_column('username',
                              existing_type=sa.String(length=120),
                              nullable=False)
        batch_op.drop_constraint('users_name_key', type_='unique')
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('name')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(
            length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('users_name_key', ['name'])
        batch_op.drop_column('username')
        batch_op.drop_column('lastname')
        batch_op.drop_column('firstname')

    # ### end Alembic commands ###
